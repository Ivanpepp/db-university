ESERCIZIO1

Modellizzare la struttura di una tabella per memorizzare tutti i dati riguardanti 
un'università:
- sono presenti diversi dipartimenti, ciascuno con i propri corsi di laurea;
- ogni corso di laurea è formato da diversi corsi;
- ogni corso può essere tenuto da diversi insegnanti e prevede più appelli d'esame;
- ogni studente è iscritto ad un corso di laurea;
- per ogni appello d'esame a cui lo studente ha partecipato, è necessario memorizzare 
il voto ottenuto, anche se non sufficiente

ESERCIZIO 2 

1. SELECT * FROM `students` WHERE YEAR(`date_of_birth`) = '1990';
2. SELECT * FROM `courses` WHERE `cfu` > 10;
3. SELECT * FROM `students` WHERE TIMESTAMPDIFF*(YEAR,date_of_birth, CURDATE*()) > 30 ORDER BY `date_of_birth` DESC;
4. SELECT * FROM `courses` WHERE `year` = 1 AND `period` = 'I semestre' ;
5. SELECT * FROM `exams` WHERE `hour` > '14:00:00' AND `date` = '2020-06-20' ;
6. SELECT * FROM `degrees` WHERE `level` = 'magistrale' ;
7. SELECT COUNT(id) FROM `departments` ;
8. SELECT * FROM `teachers` WHERE `phone` IS NULL ;




ESERCIZIO 3 

GROUP BY

1. SELECT YEAR(`enrolment_date`), COUNT(*) 
    FROM `students` 
    GROP BY YEAR(`enrolment_date`); // si potrebbe anche scrivere
    SELECT YEAR(`enrolment_date`), AS `numero_iscritti`  COUNT(*) FROM `students` 
    GROP BY `numero_iscritti`;

2. SELECT  COUNT(*) AS `n_insegnanti`, `office_address` 
    FROM `teachers` 
    GROP BY `office_address`;

3. SELECT AVG(`vote`), `exam_id`
    FROM `exam_student`
    GROUP BY `exam_id`;

4. SELECT COUNT(*). `department_id`
    FROM `degrees`
    GROUP BY `department_id`;

JOIN

1. SELECT `students`.*. `degrees`.`name`
    FROM `students`
    JOIN `degrees` ON `degrees`.`id` = `students`.`degrees_id`
    WHERE `degrees`.`name` = 'corso di laurea in economia';

2. SELECT `degrees`.`name` 
    FROM `degrees`
    JOIN `departments` ON `department_id` = `degrees`.`department_id`
    WHERE `departments`.`name` = 'dipartimento di neuroscenze'
    AND `degrees`.`level` = 'magistrale'

3. SELECT `courses`.(*), `teachers`.`name`
    FROM `courses`
    JOIN `course_teacher`
    ON `courses`.`id` = `course_teacher`.`course_id`
    JOIN `teachers` ON `course_teacher`.`teacher_id` = `teachers`.`id`
    WHERE `course_teacher`.`teacher_id` = '44';

4. SELECT `students`.`surname`, `students`.`name`,
    FROM `students`
    JOIN `degrees` ON `students`.`degrees_id` = `degrees`.`id`
    JOIN `departments` ON `degrees`.`department_id` = `departments`.`id`
    ORDER BY `students`.`surname` ASC

5.  SELECT `degrees`.`name`, `courses`.`name`, `teachers`.`name`
    FROM `degrees`
    JOIN `courses` ON `courses`.`degrees_id` = `degrees_id`
    JOIN `course_teacher` ON `course_teacher`.`course_id` = `courses`.`id`
    JOIN `teachers` ON `course_teacher`.`teacher_id` = `teachers`.`id`;

6. SELECT DISTINCT `teachers`.*
    FROM `teachers`
    JOIN `course_teacher` ON `course_teacher`.`teacher_id` = `teachers`.`id`
    JOIN `courses` ON `courses`.`id` = `course_teacher`.`course_id`
    JOIN `degrees` ON  `degrees`.`id` = `courses`.`degrees_id`
    JOIN `departments` ON `department`.`id` = `degrees`.`department_id`
    WHERE `department`.`name` = 'dipartimento di matematica'

7. SELECT  `students`.`id`, `students`.`name`, `students`.`surname`,
    COUNT(`exam_student`.`vote`) AS `numero_tentativi`, 
    MAX(`exam_student`.`vote`) AS `voto_massimo`,
    courses.name
    FROM `students`
    JOIN exam_student ON exam_student.student_id = students.id
    JOIN exams ON exam_student.exam_id = exams.id
    JOIN courses ON courses.id = exams.course_id
    GROUP BY students.id, courses.id
    HAVING `voto_massimo` >= 18